name: Go CI/CD

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
      - 'feature/**'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install GolangCI-Lint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run GolangCI-Lint
        run: |
          golangci-lint run ./...

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install dependencies
        run: |
          cd go-gin-example
          go mod tidy

      - name: Run tests
        run: |
          cd go-gin-example
          go test ./...

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install dependencies
        run: |
          cd go-gin-example
          go mod tidy

      - name: Build Docker image
        run: |
          cd go-gin-example
          docker build -t ${{ secrets.DOCKER_USERNAME }}/go-app:latest .

      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/go-app:latest
  
  deploy-to-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Staging Server
        run: |
          ssh ${{ secrets.STAGING_SERVER_USER }}@${{ secrets.STAGING_SERVER_IP }} "docker pull ${{ secrets.DOCKER_USERNAME }}/wordpress-app:latest && docker-compose -f docker-compose.yml up -d"
